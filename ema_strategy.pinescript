//@version=6
strategy(title="Moving Average Exponential Strategy (State Managed)", 
     shorttitle="EMA Strategy", 
     overlay=true, 
     initial_capital=100000, 
     default_qty_type=strategy.percent_of_equity, 
     default_qty_value=10,
     commission_type=strategy.commission.percent, 
     commission_value=0.1)

// === Inputs ===
len = input.int(20, minval=1, title="Length")
srcHigh = input(high, title="Source High")
srcLow = input(low, title="Source Low")
offset = input.int(title="Offset", defval=0, minval=-500, maxval=500)
outHigh = ta.ema(srcHigh, len)
outLow = ta.ema(srcLow, len)

plot(outHigh, title="EMA High", color=color.blue, offset=offset)
plot(outLow, title="EMA Low", color=color.yellow, offset=offset)

// === Volume EMA ===
volEmaLen = input.int(21, "Volume EMA Length", minval=1)
volEma = ta.sma(volume, volEmaLen)
volAboveEma = volume > volEma

// === Doji Detection ===
dojiThreshold = input.float(10.0, "Doji Threshold %", minval=0.1, maxval=50.0, step=0.1)
bodySize = math.abs(close - open)
candleRange = high - low
isDoji = candleRange > 0 and bodySize <= (candleRange * dojiThreshold / 100.0)

// === Candle Color and EMA Comparison ===
greenCandle = close > open
redCandle = close < open
aboveEMAHigh = close > outHigh
belowEMALow = close < outLow

// === SuperTrend ===
atrPeriod = input.int(10, "ATR Length", minval=1)
factor = input.float(3.5, "Factor", minval=0.01, step=0.01)
[supertrend, direction] = ta.supertrend(factor, atrPeriod)
upTrend = direction < 0
downTrend = direction > 0

supertrendUptrend = plot(upTrend ? supertrend : na, "SuperTrend Uptrend", color=color.lime, style=plot.style_linebr, offset=offset)
supertrendDowntrend = plot(downTrend ? supertrend : na, "SuperTrend Downtrend", color=color.red, style=plot.style_linebr, offset=offset)

// Background fill
bodyMiddle = plot(barstate.isfirst ? na : (open + close) / 2, "Body Middle", display=display.none)
fill(bodyMiddle, supertrendUptrend, color=color.new(color.lime, 90))
fill(bodyMiddle, supertrendDowntrend, color=color.new(color.red, 90))

// === Trend change detection ===
trendChangedToUptrend = not upTrend[1] and upTrend
trendChangedToDowntrend = upTrend[1] and not upTrend

// === State variables ===
var bool inBuyPosition = false
var bool inSellPosition = false

// === Trading Conditions ===
openBuyCondition  = upTrend and volAboveEma and greenCandle and aboveEMAHigh and not isDoji and not inBuyPosition and not inSellPosition
closeBuyCondition = trendChangedToDowntrend and inBuyPosition

openSellCondition  = downTrend and volAboveEma and redCandle and belowEMALow and not isDoji and not inBuyPosition and not inSellPosition
closeSellCondition = trendChangedToUptrend and inSellPosition

// === State machine ===
if openBuyCondition
    strategy.entry("Buy", strategy.long)
    inBuyPosition := true
    inSellPosition := false

if closeBuyCondition
    strategy.close("Buy")
    inBuyPosition := false

if openSellCondition
    strategy.entry("Sell", strategy.short)
    inSellPosition := true
    inBuyPosition := false

if closeSellCondition
    strategy.close("Sell")
    inSellPosition := false

// === Reset states on trend reversal ===
if trendChangedToUptrend
    inSellPosition := false
if trendChangedToDowntrend
    inBuyPosition := false

// === Smoothing MAs ===
GRP = "Smoothing"
maTypeInput = input.string("None", "Type", options = ["None", "SMA", "SMA + Bollinger Bands", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group = GRP)
isBB = maTypeInput == "SMA + Bollinger Bands"
maLengthInput = input.int(14, "Length", group = GRP)
bbMultInput = input.float(2.0, "BB StdDev", minval = 0.001, maxval = 50, step = 0.5, group = GRP)
enableMA = maTypeInput != "None"

ma(source, length, MAtype) =>
    switch MAtype
        "SMA"                   => ta.sma(source, length)
        "SMA + Bollinger Bands" => ta.sma(source, length)
        "EMA"                   => ta.ema(source, length)
        "SMMA (RMA)"            => ta.rma(source, length)
        "WMA"                   => ta.wma(source, length)
        "VWMA"                  => ta.vwma(source, length)

smoothingMAHigh = enableMA ? ma(outHigh, maLengthInput, maTypeInput) : na
smoothingStDevHigh = isBB ? ta.stdev(outHigh, maLengthInput) * bbMultInput : na
plot(smoothingMAHigh, "EMA High-based MA", color=color.lime, display = enableMA ? display.all : display.none)
bbUpperBandHigh = plot(smoothingMAHigh + smoothingStDevHigh, title = "Upper Bollinger Band High", color=color.aqua, display = isBB ? display.all : display.none)
bbLowerBandHigh = plot(smoothingMAHigh - smoothingStDevHigh, title = "Lower Bollinger Band High", color=color.aqua, display = isBB ? display.all : display.none)
fill(bbUpperBandHigh, bbLowerBandHigh, color= isBB ? color.new(color.aqua, 90) : na)

smoothingMALow = enableMA ? ma(outLow, maLengthInput, maTypeInput) : na
smoothingStDevLow = isBB ? ta.stdev(outLow, maLengthInput) * bbMultInput : bbMultInput
plot(smoothingMALow, "EMA Low-based MA", color=color.orange, display = enableMA ? display.all : display.none)
bbUpperBandLow = plot(smoothingMALow + smoothingStDevLow, title = "Upper Bollinger Band Low", color=color.fuchsia, display = isBB ? display.all : display.none)
bbLowerBandLow = plot(smoothingMALow - smoothingStDevLow, title = "Lower Bollinger Band Low", color=color.fuchsia, display = isBB ? display.all : display.none)
fill(bbUpperBandLow, bbLowerBandLow, color= isBB ? color.new(color.fuchsia, 90) : na)

// === Visual Trade Markers ===
plotshape(openBuyCondition, title="Open Buy", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small, text="BUY")
plotshape(closeBuyCondition, title="Close Buy", location=location.abovebar, color=color.blue, style=shape.xcross, size=size.small, text="CLOSE BUY")
plotshape(openSellCondition, title="Open Sell", location=location.belowbar, color=color.red, style=shape.triangledown, size=size.small, text="SELL")
plotshape(closeSellCondition, title="Close Sell", location=location.abovebar, color=color.orange, style=shape.xcross, size=size.small, text="CLOSE SELL")
